variables:
  # Define paths specific to your projects.
  CORE_BUSINESS_PROJECT: 'RTMS.CoreBusiness/RTMS.CoreBusiness.csproj'
  USE_CASES_PROJECT: 'RTMS.UseCases/RTMS.UseCases.csproj'
  WEBAPP_PROJECT: 'RTMS.Web/RTMS.Web.csproj'
  TEST_PROJECT: 'RTMS.Tests/RTMS.Tests.csproj'
  PLUGIN_PROJECT: 'RTMS.Plugins.PostgreEFCore/RTMS.Plugins.PostgreEFCore.csproj'
  EXE_RELEASE_FOLDER: 'RTMS.Web/bin/Release'
  TEST_DLL: 'RTMS.Tests/bin/Release/net8.0/RTMS.Tests.dll'
  DEPLOY_FOLDER: 'P:\Projects\RTMS\Builds'

stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  only:
    - tags
  script:
    - 'dotnet restore'  # Restore NuGet dependencies for the entire solution.
    - 'dotnet build $CORE_BUSINESS_PROJECT --configuration Release'  # Build CoreBusiness project.
    - 'dotnet build $USE_CASES_PROJECT --configuration Release'  # Build UseCases project.
    - 'dotnet build $WEBAPP_PROJECT --configuration Release'  # Build Web app project.
    - 'dotnet build $TEST_PROJECT --configuration Release'  # Build Test project.
    - 'dotnet build $PLUGIN_PROJECT --configuration Release'  # Build Plugin project.
  artifacts:
    expire_in: 1 week
    paths:
      - '$EXE_RELEASE_FOLDER/RTMS.Web.exe'
      - '$TEST_DLL'  # Save the test project DLL for xUnit.

test_job:
  stage: test
  only:
    - tags
  script:
    - 'dotnet tool install --global xunit.runner.console'
    - '$env:Path += ";$env:USERPROFILE\.dotnet\tools"'
    - 'xunit.console.exe "$TEST_DLL" -xml TestResult.xml -nologo -noappdomain'
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - 'TestResult.xml'
  dependencies:
    - build_job

deploy_job:
  stage: deploy
  only:
    - tags
  script:
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = "$DEPLOY_FOLDER" + "\" + "$CI_COMMIT_TAG" + " - " + $commitSubject + "\"'
    - 'xcopy /y "$EXE_RELEASE_FOLDER/RTMS.Web.exe" "$deployFolder"'
    - 'xcopy /y "TestResult.xml" "$deployFolder"'
  dependencies:
    - build_job
    - test_job
  environment: production

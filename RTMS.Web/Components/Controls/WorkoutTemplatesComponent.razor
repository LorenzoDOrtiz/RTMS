@inject IViewWorkoutTemplatesByUserIdUseCase ViewWorkoutsByUserIdUseCase

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5">Workouts</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
            <MudSimpleTable Elevation="3">
                <tbody>
                    @if (userWorkoutTemplates != null && userWorkoutTemplates.Count > 0)
                    {
                        @foreach (var workout in userWorkoutTemplates)
                        {
                            <WorkoutTemplatesItemComponent WorkoutTemplate="workout" />
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2">No workouts available.</td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>

            <br />

            <MudButton Href="workouts/add-workout-template" Color="Color.Info" Variant="Variant.Filled">
                Add Workout
            </MudButton>

    </MudCardContent>
</MudCard>

@code {
    private List<WorkoutTemplate>? userWorkoutTemplates;
    private int userId = 1;

    protected override async Task OnParametersSetAsync()
    {
        userWorkoutTemplates = (await ViewWorkoutsByUserIdUseCase.ExecuteAsync(userId)).ToList();
    }
}

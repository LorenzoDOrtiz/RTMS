@inject IViewWorkoutTemplatesByUserIdUseCase ViewWorkoutsByUserIdUseCase

<MudCard>
    <MudCardContent>
            <MudSimpleTable Style="overflow-x: auto;">
                <thead>
                    <tr>
                        <th>Workout Template Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (userWorkoutTemplates != null && userWorkoutTemplates.Count > 0)
                    {
                        @foreach (var workout in userWorkoutTemplates)
                        {
                            <WorkoutTemplatesItemComponent WorkoutTemplate="workout" />
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2">No workout templates available.</td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>

            <br />

            <MudButton Href="workouts/addworkouttemplate" Color="Color.Primary" Variant="Variant.Filled" Style="width: 250px;">
                Add Workout Template
            </MudButton>

    </MudCardContent>
</MudCard>

@code {
    private List<WorkoutTemplate>? userWorkoutTemplates;
    private int userId = 1;

    protected override async Task OnParametersSetAsync()
    {
        userWorkoutTemplates = (await ViewWorkoutsByUserIdUseCase.ExecuteAsync(userId)).ToList();
    }
}

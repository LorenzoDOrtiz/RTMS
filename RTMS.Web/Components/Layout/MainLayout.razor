@inherits LayoutComponentBase
@inject IActiveWorkoutService ActiveWorkoutService
@inject NavigationManager  NavigationManager

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-2">RTMS</MudText>
        @if (ActiveWorkoutService.WorkoutIsActive(1) && !IsWorkoutInProgressPage())
        {
            <div style="margin-left: auto;">
                    <MudButton StartIcon="@Icons.Material.Filled.MonitorHeart"
                               Color="Color.Success"
                               Variant="Variant.Filled"
                               Href="/workout-in-progress" Style="border-radius: 50px">
                               @ActiveWorkoutService.GetActiveWorkoutName(1)
                    </MudButton>
            </div>
        }

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MyNavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _isDarkMode = true;
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool IsWorkoutInProgressPage()
    {
        return NavigationManager.Uri.EndsWith("/workout-in-progress", StringComparison.OrdinalIgnoreCase);
    }
}